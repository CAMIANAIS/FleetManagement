// <auto-generated />
using System;
using FleetManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FleetManagement.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240527224531_UpdateTaxiTrajectoryRelationship")]
    partial class UpdateTaxiTrajectoryRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FleetManagement.Entities.Taxi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("taxis", (string)null);
                });

            modelBuilder.Entity("FleetManagement.Entities.Trajectory", b =>
                {
                    b.Property<int>("idtrajectories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idtrajectories");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idtrajectories"));

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("taxiid")
                        .HasColumnType("integer");

                    b.Property<int>("taxiid1")
                        .HasColumnType("integer");

                    b.HasKey("idtrajectories");

                    b.HasIndex("taxiid");

                    b.HasIndex("taxiid1");

                    b.ToTable("trajectories", (string)null);
                });

            modelBuilder.Entity("FleetManagement.Entities.Trajectory", b =>
                {
                    b.HasOne("FleetManagement.Entities.Taxi", null)
                        .WithMany()
                        .HasForeignKey("taxiid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FleetManagement.Entities.Taxi", "taxi")
                        .WithMany("Trajectories")
                        .HasForeignKey("taxiid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("taxi");
                });

            modelBuilder.Entity("FleetManagement.Entities.Taxi", b =>
                {
                    b.Navigation("Trajectories");
                });
#pragma warning restore 612, 618
        }
    }
}
